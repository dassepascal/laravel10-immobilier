php artisan make:model Property -m

configuration de la table Property
php artisan migrate

route:
ce qu'on veut : http://127.0.0.1:8000/admin/property


dans le cas d'une resource on justifie juste le nom du controller

creation du controller : PropertyController

php artisan make:controller Admin\PropertyController

vérification des routes
pah artisan route:list

Request pour valider les donner
php artisan make:request Admin\PropertyForRequest

Definition des regles : passage à true

modification du controller on delete et on fait
php artisan make:controller Admin\PropertyController -r

pour index
il faut recupere l'enemble des biens pour les afficher sous forme de tableau
suppression de la méthode show
Dans route
on supprime des reources show avec "except()"

creation de la view admin/admin.blade.php

le lien ajouter un bien create : $property = une nouvelle property => new Property() un lien vide qui va nous permettre de récupérer les valeurs

nouveau dossier shared dans view

dans form.blade.php
 action="{{ route($property->exists ? 'admin.property-update' : 'admin.property.store', ['property' => $property]) }}"
 en mode edition on peut ecrire:
  action="{{ route($property->exists ? 'admin.property-update' : 'admin.property.store',  $property) }}"
pour editer un bien la methode doit etre put ou patch


gestion de la partie sauvegarde du formulaire d'enregistrement
PropertyController
je vais créer un nouveau bien : $property = Property::create($request ->valideted());

pour la methode create on peut donner des valeurs par defaut.

pour la parti vendu ou pas vendu checkbox
checkbox.blade.php
valeur par defaut : <input @checked(old($value ?? false)) type="checbox" value="1" name="{{ $name }}" class="form-check-input @error($name) is-invalide @enderror" role="switch" id="{{ $name }}">
Pour selection multiple maintenir la toucche alt

pour afficher les messages dans admin.blade.php

@if(session('succecc'))
<div class="alert alert-success">
    {{session('success')}}
</div>
@endif

pour la pagination des pages configuration de bootstrap dans AppServiceProvider

use Illuminate\Pagination\Paginator;
 public function boot(): void
    {
        Paginator::useBootstrap();
    }

pour les boutons action editer sera <a></a>
et pour destry sera un formulaire securité

Dans PropertyController

methode editer


navbar voir comment est active le lien



gestion des options creation d'une table de liaison entre les tables  property et option

relation many to many  nm dans le cas de ulm
php artisan make:migration CreateOptionPropertyTable
attention : "foreignIdFor"

 public function up(): void
    {
        Schema::create('option_property', function (Blueprint $table) {
            $table->foreignIdFor(Option::class)->constrained()->cascadeOnDelete();
            $table->foreignIdFor(Property::class)->constrained()->cascadeOnDelete();
            $table->primary(['option_id', 'property_id']);
        });
    }

    modificatoin de admin.blade
selection multiple mettre des [] dans name="{{ $name }}[]


      <select class="form-control @error($name) is-invalid @enderror" id="{{  $name }}" name="{{ $name }}[]"
        {{ $multipe ? 'multiple' : '' }}>

il faut passer dans PropertyController les options :
 public function create()
    {
        $property = new Property();

        $property->forceFill([
            'surface' => 40,
            'rooms' => 2,
            'bedrooms' => 1,
            'floor' => 1,
            'city' => 'Auray',
            'postal_code' => '56400',
            'sold' => false,
        ]);


        return view('admin.properties.form', [
            'property' => $property,
            'options' => [],
        ]);

    }


Affichage des options dans le champ :
   @foreach($options as $k =>$v)
        <option @selected($value->contains($k)) value="{{ $k }}" >
            {{ $v }}
        </option>
        @endforeach


page accueil
creation d'un controller homeController

route: Route::get('/', [HopmeController::class,'index]);
creation de la methode public function index() dans le Home controller

la vue base.blade.php
suppression de la div container si besoin ajout dans les pages


